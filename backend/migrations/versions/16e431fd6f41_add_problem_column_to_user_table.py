"""Add problem column to User table

Revision ID: 16e431fd6f41
Revises: 
Create Date: 2024-08-18 15:49:15.316961

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '16e431fd6f41'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('appointments')
    op.drop_table('doctor')
    op.drop_table('staff')
    op.drop_table('doctoravailability')
    # ### end Alembic commands ### 


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doctoravailability',
    sa.Column('availability_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('doctor_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('available_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('is_booked', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.doctor_id'], name='doctoravailability_doctor_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('availability_id', name='doctoravailability_pkey')
    )
    op.create_table('staff',
    sa.Column('staff_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='staff_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('staff_id', name='staff_pkey')
    )
    op.create_table('doctor',
    sa.Column('doctor_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('specialization', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='doctor_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('doctor_id', name='doctor_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('appointments',
    sa.Column('appointment_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('patient_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('doctor_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('appointment_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'scheduled'::character varying"), autoincrement=False, nullable=True),
    sa.CheckConstraint("status::text = ANY (ARRAY['scheduled'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])", name='appointments_status_check'),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.doctor_id'], name='appointments_doctor_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.user_id'], name='appointments_patient_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('appointment_id', name='appointments_pkey')
    )
    # ### end Alembic commands ###
